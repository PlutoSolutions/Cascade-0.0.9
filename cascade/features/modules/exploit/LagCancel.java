/*
 * Decompiled with CFR 0.150.
 * 
 * Could not load the following classes:
 *  net.minecraft.network.Packet
 *  net.minecraft.network.play.client.CPacketPlayer$Position
 *  net.minecraft.network.play.server.SPacketPlayerPosLook
 *  net.minecraftforge.fml.common.eventhandler.SubscribeEvent
 */
package cascade.features.modules.exploit;

import cascade.event.events.PacketEvent;
import cascade.features.modules.Module;
import cascade.features.setting.Setting;
import cascade.util.EntityUtil;
import cascade.util.Timer;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.network.play.server.SPacketPlayerPosLook;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

public class LagCancel
extends Module {
    public Setting<Boolean> sneak = this.register(new Setting<Boolean>("Sneak", false));
    public Setting<Integer> delay = this.register(new Setting<Object>("Delay", Integer.valueOf(100), Integer.valueOf(1), Integer.valueOf(500), v -> this.sneak.getValue()));
    public Setting<Boolean> spoofy = this.register(new Setting<Boolean>("SpoofY", false));
    Timer timer = new Timer();

    public LagCancel() {
        super("LagCancel", Module.Category.EXPLOIT, "Prevents you from lagging back");
    }

    @Override
    public void onToggle() {
        this.timer.reset();
    }

    @SubscribeEvent
    public void onPacketRecieve(PacketEvent.Receive e) {
        if (e.getPacket() instanceof SPacketPlayerPosLook && this.megaNullCheck()) {
            if (this.spoofy.getValue().booleanValue() && LagCancel.mc.player.onGround) {
                mc.getConnection().sendPacket((Packet)new CPacketPlayer.Position(LagCancel.mc.player.posX, LagCancel.mc.player.posY + 1.0E-20, LagCancel.mc.player.posZ, true));
                mc.getConnection().sendPacket((Packet)new CPacketPlayer.Position(LagCancel.mc.player.posX, LagCancel.mc.player.posY - 1.0E-20, LagCancel.mc.player.posZ, false));
            }
            if (this.sneak.getValue().booleanValue()) {
                if (this.timer.passedMs(this.delay.getValue().intValue())) {
                    EntityUtil.startSneaking();
                    this.timer.reset();
                }
                EntityUtil.stopSneaking(false);
                this.timer.reset();
            }
        }
    }
}

